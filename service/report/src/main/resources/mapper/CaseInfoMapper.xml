<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.fintecher.pangolin.report.mapper.CaseInfoMapper">
    <resultMap id="caseInfoBean" type="cn.fintecher.pangolin.report.entity.CaseInfo">
        <id column="id" property="id"/>
        <result column="batch_number" property="batchNumber"/>
        <result column="case_number" property="caseNumber"/>
        <result column="contract_amount" property="contractAmount"/>
        <result column="collection_type" property="collectionType"/>
        <result column="overdue_fine" property="overdueFine"/>
        <result column="overdue_delay_fine" property="overdueDelayFine"/>
        <result column="periods" property="periods"/>
        <result column="loan_date" property="loanDate"/>
        <result column="per_due_date" property="perDueDate"/>
        <result column="per_pay_amount" property="perPayAmount"/>
        <result column="overdue_days" property="overdueDays"/>
        <result column="overdue_periods" property="overduePeriods"/>
        <result column="lately_pay_amount" property="latelyPayAmount"/>
        <result column="overdue_amount" property="overdueAmount"/>
        <result column="overdue_capital" property="overdueCapital"/>
        <result column="overdue_interest" property="overdueInterest"/>
        <result column="has_pay_amount" property="hasPayAmount"/>
        <result column="has_pay_periods" property="hasPayPeriods"/>
        <result column="leave_date" property="leaveDate"/>
        <result column="lately_pay_date" property="latelyPayDate"/>
        <result column="assist_flag" property="assistFlag"/>
        <result column="assist_status" property="assistStatus"/>
        <result column="has_leave_days" property="hasLeaveDays"/>
        <result column="assist_way" property="assistWay"/>
        <result column="hold_days" property="holdDays"/>
        <result column="operator_time" property="operatorTime"/>
        <result column="left_days" property="leftDays"/>
        <result column="leave_case_flag" property="leaveCaseFlag"/>
        <result column="promise_amt" property="promiseAmt"/>
        <result column="promise_time" property="promiseTime"/>
        <result column="case_follow_in_time" property="caseFollowInTime"/>
        <result column="pay_status" property="payStatus"/>
        <result column="collection_status" property="collectionStatus"/>
        <result column="overdue_manage_fee" property="overdueManageFee"/>
        <result column="derate_amt" property="derateAmt"/>
        <result column="real_pay_amount" property="realPayAmount"/>
        <result column="early_real_settle_amt" property="earlyRealSettleAmt"/>
        <result column="early_derate_amt" property="earlyDerateAmt"/>
        <result column="early_settle_amt" property="earlySettleAmt"/>
        <result column="other_amt" property="otherAmt"/>
        <result column="left_capital" property="leftCapital"/>
        <result column="left_interest" property="leftInterest"/>
        <result column="followup_back" property="followupBack"/>
        <association property="personalInfo" column="personal_id" select="selectPersonal">
        </association>
        <association property="product" column="product_id" select="selectProduct">
        </association>

        <association property="principalId" column="principal_id" select="selectPrincipal">
        </association>
        <association property="area" column="area_id" select="selectArea">
        </association>
    </resultMap>

    <resultMap id="personalMap" type="cn.fintecher.pangolin.entity.Personal">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="sex" property="sex"/>
        <result column="mobile_no" property="mobileNo"/>
        <result column="mobile_status" property="mobileStatus"/>
        <result column="id_card" property="idCard"/>
        <result column="local_home_address" property="localHomeAddress"/>
        <result column="longitude" property="longitude"/>
        <result column="latitude" property="latitude"/>
        <collection property="personalJobs" column="id"
                    ofType="cn.fintecher.pangolin.entity.PersonalJob" select="selectJob">
        </collection>
    </resultMap>

    <resultMap id="personalJobMap" type="cn.fintecher.pangolin.entity.PersonalJob">
        <id column="id" property="id"/>
        <result column="company_name" property="companyName"/>
        <result column="department" property="department"/>
        <result column="phone" property="phone"/>
        <result column="rank" property="rank"/>
    </resultMap>

    <resultMap id="productMap" type="cn.fintecher.pangolin.entity.Product">
        <id column="id" property="id"/>
        <result column="prodcut_name" property="prodcutName"/>
    </resultMap>

    <resultMap id="principalMap" type="cn.fintecher.pangolin.entity.Principal">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <resultMap id="areaMap" type="cn.fintecher.pangolin.entity.AreaCode">
        <id column="id" property="id"/>
        <result column="area_name" property="areaName"/>
    </resultMap>

    <select id="selectJob" parameterType="String" resultMap="personalJobMap">
        select * from personal_job where personal_id = #{id}
    </select>

    <select id="selectProduct" parameterType="String" resultMap="productMap">
        select id,prodcut_name from product where id = #{product_id}
    </select>

    <select id="selectPrincipal" parameterType="String" resultMap="principalMap">
        select id,name from principal where id = #{principal_id}
    </select>

    <select id="selectArea" parameterType="String" resultMap="areaMap">
        select id,area_name from area_code where id = #{area_id}
    </select>

    <select id="queryWaitCollectCase" parameterType="cn.fintecher.pangolin.report.model.CaseInfoParams"
            resultMap="caseInfoBean">
        select
        b.id,b.batch_number,b.case_number,b.contract_amount,b.overdue_fine,b.collection_type,b.overdue_amount,b.left_capital,b.left_interest,b.overdue_capital,
        b.overdue_interest,b.has_pay_amount,b.assist_flag,b.assist_status,b.assist_way,b.hold_days,b.left_days,b.leave_case_flag,b.overdue_delay_fine,b.periods,
        b.has_leave_days,b.case_follow_in_time,b.pay_status,b.collection_status,b.overdue_manage_fee,b.derate_amt,b.real_pay_amount,b.per_pay_amount,b.per_due_date,
        b.early_settle_amt,b.early_real_settle_amt,b.early_derate_amt,b.other_amt,b.followup_back,b.product_id,b.overdue_periods,b.overdue_days,
        b.has_pay_periods,b.lately_pay_date,b.lately_pay_amount,b.leave_date,b.operator_time,b.promise_amt,b.promise_time,b.area_id,b.loan_date,b.early_derate_amt,
        b.principal_id,b.personal_id,b.early_real_settle_amt from
        (
        select a.*
        from case_info a ,department b,personal p
        where a.depart_id=b.id
        and b.code like CONCAT(#{deptCode}, '%')
        and a.company_code = #{companyCode}
        and a.collection_type=16
        and a.collection_status = 20
        and a.case_type in(173,181)
        and a.case_pool_type = 225
        and a.personal_id = p.id
        <if test="name != null">
            and p.name like CONCAT('%',#{name}, '%')
        </if>
        <if test="address != null">
            and p.local_home_address like CONCAT('%', #{address}, '%')
        </if>
        UNION ALL
        select b.*
        from case_assist a ,case_info b,department c,personal p
        where a.case_id=b.id
        and a.depart_id=c.id
        and c.code like CONCAT(#{deptCode}, '%')
        and a.company_code = #{companyCode}
        and a.assist_status = 118
        and b.personal_id = p.id
        <if test="name != null">
            and p.name like CONCAT('%',#{name}, '%')
        </if>
        <if test="address != null">
            and p.local_home_address like CONCAT('%', #{address}, '%')
        </if>
        ) as b
    </select>

    <select id="queryWaitOwnCollectCase" parameterType="cn.fintecher.pangolin.report.model.CaseInfoParams"
            resultMap="caseInfoBean">
        select
        b.id,b.batch_number,b.case_number,b.contract_amount,b.overdue_fine,b.collection_type,b.overdue_amount,b.left_capital,b.left_interest,b.overdue_capital,
        b.overdue_interest,b.has_pay_amount,b.assist_flag,b.assist_status,b.assist_way,b.hold_days,b.left_days,b.leave_case_flag,b.overdue_delay_fine,b.periods,
        b.has_leave_days,b.case_follow_in_time,b.pay_status,b.collection_status,b.overdue_manage_fee,b.derate_amt,b.real_pay_amount,b.per_pay_amount,b.per_due_date,
        b.early_settle_amt,b.early_real_settle_amt,b.early_derate_amt,b.other_amt,b.followup_back,b.product_id,b.overdue_periods,b.overdue_days,
        b.has_pay_periods,b.lately_pay_date,b.lately_pay_amount,b.leave_date,b.operator_time,b.promise_amt,b.promise_time,b.area_id,b.loan_date,b.early_derate_amt,
        b.principal_id,b.personal_id,b.early_real_settle_amt from
        (
        SELECT
        a.*
        FROM
        case_info AS a, personal AS p
        WHERE
        a.company_code = #{companyCode}
        and a.collection_status = 20
        and a.current_collector = #{collector}
        and a.case_type in(173,181)
        and a.personal_id = p.id
        <if test="name != null">
            and p.name like CONCAT('%',#{name}, '%')
        </if>
        <if test="address != null">
            and p.local_home_address like CONCAT('%', #{address}, '%')
        </if>
        UNION ALL
        SELECT
        b.*
        from case_info as b, case_assist as a,personal as p
        WHERE
        a.company_code = #{companyCode}
        and a.assist_collector= #{collector}
        and a.assist_status = 118
        and a.case_id = b.id
        and b.personal_id = p.id
        <if test="name != null">
            and p.name like CONCAT('%',#{name}, '%')
        </if>
        <if test="address != null">
            and p.local_home_address like CONCAT('%', #{address}, '%')
        </if>
        ) as b
        ORDER BY b.operator_time desc
    </select>

    <select id="selectPersonal" parameterType="String" resultMap="personalMap">
    select p.id,p.name,p.sex,p.mobile_no,p.mobile_status,p.id_card,p.local_home_address,p.longitude,p.latitude
    from personal p where p.id = #{personal_id}
  </select>

    <update id="updateLngLat" parameterType="cn.fintecher.pangolin.entity.Personal">
      update personal
      set longitude = #{longitude},latitude = #{latitude}
      where id = #{id}
  </update>

    <select id="queryCollectingCase" parameterType="cn.fintecher.pangolin.report.model.CollectingCaseParams"
            resultType="cn.fintecher.pangolin.report.model.CollectingCaseInfo">
        select a.batch_number as
        batchNumber,a.name,a.caseFollowInTime,a.delegationDate,a.closeDate,a.leftDays,a.caseNum,a.caseAmt,a.endCaseAmt,ifnull(endCaseNum,0)
        as endCaseNum,truncate(ifnull(( endCaseNum/caseNum),0),4) as numRate,truncate((endCaseAmt/caseAmt),4) as
        amtRate
        from
        (
        select
        aa.batch_number,aa.caseFollowInTime,aa.delegationDate,aa.closeDate,aa.leftDays,aa.caseNum,aa.caseAmt,aa.endCaseAmt,ab.name,
        aa.endCaseNum
        from
        (
        select batch_number,principal_id,MIN(case_follow_in_time) as caseFollowInTime ,MIN(delegation_date) as
        delegationDate,Max(close_date) as closeDate,Min(left_days) as leftDays,count(*) as caseNum,sum(overdue_amount)
        as caseAmt,sum(real_pay_amount+early_real_settle_amt) as endCaseAmt,
        count(case when real_pay_amount!=0.00 then 0 end) as endCaseNum
        from case_info cc
        left join department on cc.depart_id = department.id
        where 1 = 1
        and department.code like CONCAT(#{deptCode}, '%')
        and (collection_status in (20,21,22,23,171,172) or (collection_status =25 and depart_id is not null))
        and case_pool_type = 225
        and recover_remark = 0
        <if test="batchNumber != null">
            and batch_number = #{batchNumber}
        </if>
        <if test="delegationDateStart != null and delegationDateStart != ''">
            AND <![CDATA[DATE_FORMAT(delegation_date,'%Y-%m-%d') >= DATE_FORMAT(#{delegationDateStart},'%Y-%m-%d')]]>
        </if>
        <if test="delegationDateStart != null and delegationDateStart != ''">
            AND <![CDATA[DATE_FORMAT(delegation_date,'%Y-%m-%d') <= DATE_FORMAT(#{delegationDateEnd},'%Y-%m-%d')]]>
        </if>
        <if test="closeDateStart != null and closeDateStart != ''">
            AND <![CDATA[DATE_FORMAT(close_date,'%Y-%m-%d') >= DATE_FORMAT(#{closeDateStart},'%Y-%m-%d')]]>
        </if>
        <if test="closeDateEnd != null and closeDateEnd != ''">
            AND <![CDATA[DATE_FORMAT(close_date,'%Y-%m-%d') <= DATE_FORMAT(#{closeDateEnd},'%Y-%m-%d')]]>
        </if>
        <if test="companyCode != null">
            and cc.company_code = #{companyCode}
        </if>
        GROUP BY batch_number,principal_id
        )as aa
        inner join
        (
        select id,name from principal
        where 1 = 1
        <if test="principalId != null">
            and id = #{principalId}
        </if>
        ) as ab
        on aa.principal_id = ab.id
        )
        as a
    </select>

    <!-- 多条件查询案件信息 -->
    <select id="getCaseInfoByCondition" parameterType="cn.fintecher.pangolin.report.model.CaseInfoConditionParams"
            resultType="cn.fintecher.pangolin.report.model.CaseInfoModel">
        SELECT
        a.caseId,a.caseNumber as caseNumber,a.batchNumber as batchNumber,a.collectionType,a.overdueAmount as
        overdueAmount,a.payStatus,a.overdueDays as overdueDays,a.collectionStatus,a.followupTime as followupTime,
        a.caseFollowInTime,a.followupBack as followupBack,a.assistWay,a.holdDays,a.leftDays,a.leaveCaseFlag,b.`name` as
        personalName,b.mobile_no as mobileNo,b.id_card as idCard,c.`name` as principalName,c.id as principalId,
        d.real_name as collectorName,e.`code` as deptCode,a.caseMark,a.case_pool_type,b.id as
        personalId,a.promiseAmt,a.promiseTime,f.area_name as cityName,f.id as areaId,g.id as
        parentAreaId,a.operatorTime,a.realPayAmount,a.endRemark from
        (SELECT id as caseId,case_number as caseNumber,batch_number as batchNumber,overdue_amount as
        overdueAmount,pay_status as payStatus,overdue_days as overdueDays,collection_status as
        collectionStatus,followup_time
        as followupTime,case_follow_in_time as caseFollowInTime,followup_back as followupBack,assist_way as
        assistWay,hold_days
        as holdDays,left_days as leftDays,leave_case_flag as
        leaveCaseFlag,personal_id,principal_id,current_collector,depart_id,collection_type as collectionType,case_mark
        as caseMark,case_pool_type,promise_amt as promiseAmt,promise_time as promiseTime,area_id,operator_time as
        operatorTime,real_pay_amount as realPayAmount, end_remark AS endRemark from
        case_info where recover_remark=0 and current_collector is not null and company_code = #{companyCode}) a
        LEFT JOIN personal b on a.personal_id = b.id
        LEFT JOIN principal c on a.principal_id = c.id
        LEFT JOIN `user` d on a.current_collector = d.id
        LEFT JOIN department e on a.depart_id = e.id
        LEFT JOIN area_code f on a.area_id = f.id
        LEFT JOIN area_code g on f.parent_id = g.id
        LEFT JOIN personal_bank pb on a.personal_id = pb.personal_id
        where a.case_pool_type = 225 and a.collectionStatus in(${collectionStatusList}) and a.collectionType
        in(${collectionType})
        <if test="isManager == 1">
            AND e.`code` LIKE concat(#{code},'%')
        </if>
        <if test="isManager == 0">
            AND a.current_collector = #{userId}
        </if>
        <if test="personalName != null">
            AND b.`name` LIKE concat('%',#{personalName},'%')
        </if>
        <if test="deptCode != null">
            AND e.`code` LIKE concat(#{deptCode},'%')
        </if>
        <if test="collectorName != null">
            AND d.real_name LIKE concat('%',#{collectorName},'%')
        </if>
        <if test="overdueMaxAmt != null">
            AND <![CDATA[a.overdueAmount <= #{overdueMaxAmt}]]>
        </if>
        <if test="overdueMinAmt != null">
            AND <![CDATA[a.overdueAmount >= #{overdueMinAmt}]]>
        </if>
        <if test="payStatus != null and payStatus == 'M6'">
            AND a.payStatus not in ('M0','M1','M2','M3','M4','M5')
        </if>
        <if test="payStatus != null and payStatus != 'M6'">
            AND a.payStatus = #{payStatus}
        </if>
        <if test="overMaxDay != null">
            AND <![CDATA[a.overdueDays <= #{overMaxDay}]]>
        </if>
        <if test="overMinDay != null">
            AND <![CDATA[a.overdueDays >= #{overMinDay}]]>
        </if>
        <if test="batchNumber != null">
            AND a.batchNumber = #{batchNumber}
        </if>
        <if test="principalId != null">
            AND c.id = #{principalId}
        </if>
        <if test="idCard != null">
            AND b.id_card = #{idCard}
        </if>
        <if test="feedBack != null">
            AND a.followupBack = #{feedBack}
        </if>
        <if test="assistWay != null">
            AND a.assistWay = #{assistWay}
        </if>
        <if test="caseMark != null">
            AND a.caseMark = #{caseMark}
        </if>
        <if test="collectionStatus != null">
            AND a.collectionStatus = #{collectionStatus}
        </if>
        <if test="parentAreaId != null">
            AND (g.id = #{parentAreaId} or f.id = #{parentAreaId})
        </if>
        <if test="areaId != null">
            AND (f.id = #{areaId} OR f.parent_id = #{areaId})
        </if>
        <if test="realPayMaxAmt != null">
            AND <![CDATA[a.realPayAmount <= #{realPayMaxAmt}]]>
        </if>
        <if test="realPayMinAmt != null">
            AND <![CDATA[a.realPayAmount >= #{realPayMinAmt}]]>
        </if>
        <if test="mobileNo != null and mobileNo != ''">
            AND b.mobile_no = trim(#{mobileNo})
        </if>
        ORDER BY a.caseMark desc
        <if test="sort != null and sort == 'followupBack,asc'">
            ,if(isnull(a.followupBack),1,0),a.followupBack asc
        </if>
        <if test="sort != null and sort == 'followupBack,desc'">
            ,if(isnull(a.followupBack),1,0),a.followupBack desc
        </if>
        <if test="sort != null and sort == 'followupTime,asc'">
            ,if(isnull(a.followupTime),1,0),a.followupTime asc
        </if>
        <if test="sort != null and sort == 'followupTime,desc'">
            ,if(isnull(a.followupTime),1,0),a.followupTime desc
        </if>
        <if test="sort != null and sort == 'caseNumber,asc'">
            ,a.caseNumber asc
        </if>
        <if test="sort != null and sort == 'caseNumber,desc'">
            ,a.caseNumber desc
        </if>
        <if test="sort != null and sort == 'overdueAmount,asc'">
            ,a.overdueAmount asc
        </if>
        <if test="sort != null and sort == 'overdueAmount,desc'">
            ,a.overdueAmount desc
        </if>
        <if test="sort != null and sort == 'overdueDays,asc'">
            ,a.overdueDays asc
        </if>
        <if test="sort != null and sort == 'overdueDays,desc'">
            ,a.overdueDays desc
        </if>
        <if test="sort != null and sort == 'batchNumber,asc'">
            ,a.batchNumber asc
        </if>
        <if test="sort != null and sort == 'batchNumber,desc'">
            ,a.batchNumber desc
        </if>
        <if test="sort != null and sort == 'idCard,asc'">
            ,b.id_card asc
        </if>
        <if test="sort != null and sort == 'idCard,desc'">
            ,b.id_card desc
        </if>
        ,b.`name` asc
    </select>

    <!-- 多条件查询协催案件信息 -->
    <select id="getCaseAssistByCondition" parameterType="cn.fintecher.pangolin.report.model.CaseInfoConditionParams"
            resultType="cn.fintecher.pangolin.report.model.CaseAssistModel">
        SELECT a.dept_code,
        a.caseId,a.assistId,a.leaveCaseFlag,a.markId,a.caseFlowinTime,a.assistWay,a.assistStatus,b.case_number as
        caseNumber,
        b.overdue_amount as overdueAmount,c.real_name as latelyCollectorName,d.real_name as
        currentCollectorName,e.real_name as assistCollectorName,
        f.real_name as operatorName,g.`name` as personalName,g.mobile_no as mobileNo,g.id as personalId from
        (SELECT dept_code, depart_id,case_id as caseId,id as assistId,lately_collector as
        latelyCollectorId,current_collector as
        currentCollectorId,assist_collector as assistCollectorId,leave_case_flag as leaveCaseFlag,mark_id as
        markId,case_flowin_time as caseFlowinTime,operator,assist_way as assistWay,assist_status as
        assistStatus,operator_time as operatorTime from
        case_assist where company_code = #{companyCode}) a
        LEFT JOIN case_info b on a.caseId = b.id
        LEFT JOIN `user` c on a.latelyCollectorId = c.id
        LEFT JOIN `user` d on a.currentCollectorId = d.id
        LEFT JOIN `user` e on a.assistCollectorId = e.id
        LEFT JOIN `user` f on a.operator = f.id
        LEFT JOIN personal g on b.personal_id = g.id
        LEFT JOIN department h on a.depart_id = h.id
        LEFT JOIN personal_bank pb on b.personal_id = pb.personal_id
        where a.assistStatus in(${assistStatusList})
        <if test="isManager == 0">
            AND a.assistCollectorId = #{userId}
        </if>
        <if test="personalName != null">
            AND g.`name` LIKE concat('%',#{personalName},'%')
        </if>
        <if test="mobileNo != null">
            AND g.mobile_no = #{mobileNo}
        </if>
        <if test="overdueMaxAmount != null">
            AND <![CDATA[b.overdue_amount <= #{overdueMaxAmount}]]>
        </if>
        <if test="overdueMinAmount != null">
            AND <![CDATA[b.overdue_amount >= #{overdueMinAmount}]]>
        </if>
        ORDER BY a.markId asc
        <if test="sort != null and sort == 'operatorTime,desc'">
            ,a.operatorTime desc
        </if>
        <if test="sort != null and sort == 'assistStatus,asc'">
            ,a.assistStatus asc
        </if>
        <if test="sort != null and sort == 'assistStatus,desc'">
            ,a.assistStatus desc
        </if>
        <if test="sort != null and sort == 'caseFlowinTime,asc'">
            ,a.caseFlowinTime asc
        </if>
        <if test="sort != null and sort == 'caseFlowinTime,desc'">
            ,a.caseFlowinTime desc
        </if>
        <if test="sort != null and sort == 'leaveCaseFlag,asc'">
            ,a.leaveCaseFlag asc
        </if>
        <if test="sort != null and sort == 'leaveCaseFlag,desc'">
            ,a.leaveCaseFlag desc
        </if>
        <if test="sort != null and sort == 'caseNumber,asc'">
            ,b.case_number asc
        </if>
        <if test="sort != null and sort == 'caseNumber,desc'">
            ,b.case_number desc
        </if>
        <if test="sort != null and sort == 'overdueAmount,asc'">
            ,b.overdue_amount asc
        </if>
        <if test="sort != null and sort == 'overdueAmount,desc'">
            ,b.overdue_amount desc
        </if>
    </select>

    <!-- 多条件查询内催案件信息 根据 批次号 委托方 查询案件信息 -->
    <select id="getInnerCaseInfoByCondition" parameterType="cn.fintecher.pangolin.report.model.CaseInfoConditionParams"
            resultType="cn.fintecher.pangolin.report.model.CaseInfoModel">
        SELECT
        a.caseId,a.caseNumber as caseNumber,a.batchNumber as batchNumber,a.collectionType,a.overdueAmount as
        overdueAmount,a.payStatus,a.overdueDays as overdueDays,a.collectionStatus,a.followupTime as followupTime,
        a.caseFollowInTime,a.followupBack as followupBack,a.assistWay,a.holdDays,a.leftDays,a.leaveCaseFlag,b.`name` as
        personalName,b.mobile_no as mobileNo,b.id_card as idCard,c.`name` as principalName,c.id as principalId,
        d.real_name as collectorName,e.`code` as deptCode,a.caseMark,a.case_pool_type,b.id as
        personalId,a.promiseAmt,a.promiseTime,f.area_name as cityName,f.id as areaId,g.id as
        parentAreaId,a.operatorTime,a.realPayAmount,a.endRemark,a.score,a.delegationDate,a.closeDate,e.name as deptName
        from
        (SELECT id as caseId,case_number as caseNumber,batch_number as batchNumber,overdue_amount as
        overdueAmount,pay_status as payStatus,overdue_days as overdueDays,collection_status as
        collectionStatus,followup_time
        as followupTime,case_follow_in_time as caseFollowInTime,followup_back as followupBack,assist_way as
        assistWay,hold_days
        as holdDays,left_days as leftDays,leave_case_flag as
        leaveCaseFlag,personal_id,principal_id,current_collector,depart_id,collection_type as collectionType,case_mark
        as caseMark,case_pool_type,promise_amt as promiseAmt,promise_time as promiseTime,area_id,operator_time as
        operatorTime,real_pay_amount as realPayAmount, end_remark AS endRemark,score,delegation_date as
        delegationDate,close_date as closeDate from
        case_info where company_code = #{companyCode}) a
        LEFT JOIN personal b on a.personal_id = b.id
        LEFT JOIN principal c on a.principal_id = c.id
        LEFT JOIN `user` d on a.current_collector = d.id
        LEFT JOIN department e on a.depart_id = e.id
        LEFT JOIN area_code f on a.area_id = f.id
        LEFT JOIN area_code g on f.parent_id = g.id
        LEFT JOIN personal_bank pb on a.personal_id = pb.personal_id
        where a.case_pool_type = 225 and a.collectionStatus in(${collectionStatusList})
        and (a.collectionType in(${collectionType}) or a.current_collector is NULL )
        <if test="isManager == 1">
            AND e.`code` LIKE concat(trim(#{code}),'%')
        </if>
        <if test="isManager == 0">
            AND a.current_collector = trim(#{userId})
        </if>
        <if test="personalName != null">
            AND b.`name` LIKE concat('%',trim(#{personalName}),'%')
        </if>
        <if test="collectorName != null">
            AND d.real_name LIKE concat('%',trim(#{collectorName}),'%')
        </if>
        <if test="overdueMaxAmt != null">
            AND <![CDATA[a.overdueAmount <= trim(#{overdueMaxAmt})]]>
        </if>
        <if test="overdueMinAmt != null">
            AND <![CDATA[a.overdueAmount >= trim(#{overdueMinAmt})]]>
        </if>
        <if test="payStatus != null and payStatus == 'M6'">
            AND a.payStatus not in ('M0','M1','M2','M3','M4','M5')
        </if>
        <if test="payStatus != null and payStatus != 'M6'">
            AND a.payStatus = trim(#{payStatus})
        </if>
        <if test="overMaxDay != null">
            AND <![CDATA[a.overdueDays <= trim(#{overMaxDay})]]>
        </if>
        <if test="overMinDay != null">
            AND <![CDATA[a.overdueDays >= trim(#{overMinDay})]]>
        </if>
        <if test="batchNumber != null">
            AND a.batchNumber = trim(#{batchNumber})
        </if>
        <if test="principalId != null">
            AND c.id = trim(#{principalId})
        </if>
        <if test="idCard != null">
            AND b.id_card = trim(#{idCard})
        </if>
        <if test="feedBack != null">
            AND a.followupBack = trim(#{feedBack})
        </if>
        <if test="assistWay != null">
            AND a.assistWay = trim(#{assistWay})
        </if>
        <if test="caseMark != null">
            AND a.caseMark = trim(#{caseMark})
        </if>
        <if test="collectionStatus != null">
            AND a.collectionStatus = trim(#{collectionStatus})
        </if>
        <if test="parentAreaId != null">
            AND g.id = trim(#{parentAreaId})
        </if>
        <if test="areaId != null">
            AND f.id = trim(#{areaId}) OR f.parent_id = trim(#{areaId})
        </if>
        <if test="realPayMaxAmt != null">
            AND <![CDATA[a.realPayAmount <= trim(#{realPayMaxAmt})]]>
        </if>
        <if test="realPayMinAmt != null">
            AND <![CDATA[a.realPayAmount >= trim(#{realPayMinAmt})]]>
        </if>
        <if test="mobileNo != null and mobileNo != ''">
            AND b.mobile_no = trim(#{mobileNo})
        </if>
        <if test="deptCode != null and deptCode != ''">
            AND e.code = trim(#{deptCode})
        </if>
        ORDER BY a.caseMark desc
        <if test="sort != null and sort == 'followupBack,asc'">
            ,if(isnull(a.followupBack),1,0),a.followupBack asc
        </if>
        <if test="sort != null and sort == 'followupBack,desc'">
            ,if(isnull(a.followupBack),1,0),a.followupBack desc
        </if>
        <if test="sort != null and sort == 'followupTime,asc'">
            ,if(isnull(a.followupTime),1,0),a.followupTime asc
        </if>
        <if test="sort != null and sort == 'followupTime,desc'">
            ,if(isnull(a.followupTime),1,0),a.followupTime desc
        </if>
        <if test="sort != null and sort == 'caseNumber,asc'">
            ,a.caseNumber asc
        </if>
        <if test="sort != null and sort == 'caseNumber,desc'">
            ,a.caseNumber desc
        </if>
        <if test="sort != null and sort == 'overdueAmount,asc'">
            ,a.overdueAmount asc
        </if>
        <if test="sort != null and sort == 'overdueAmount,desc'">
            ,a.overdueAmount desc
        </if>
        <if test="sort != null and sort == 'overdueDays,asc'">
            ,a.overdueDays asc
        </if>
        <if test="sort != null and sort == 'overdueDays,desc'">
            ,a.overdueDays desc
        </if>
        <if test="sort != null and sort == 'batchNumber,asc'">
            ,a.batchNumber asc
        </if>
        <if test="sort != null and sort == 'batchNumber,desc'">
            ,a.batchNumber desc
        </if>
        <if test="sort != null and sort == 'idCard,asc'">
            ,b.id_card asc
        </if>
        <if test="sort != null and sort == 'idCard,desc'">
            ,b.id_card desc
        </if>
        ,b.`name` asc
    </select>
</mapper>