<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.fintecher.pangolin.report.mapper.AdminPageMapper">


    <select id="collectorRanking" parameterType="cn.fintecher.pangolin.report.model.CollectorRankingParams" resultType="cn.fintecher.pangolin.report.model.CollectorRankingModel">
        SELECT a.uname, a.rname AS name, b.amount/10000 AS amount, b.count AS count, a.payCount AS payCount, a.payAmount/10000 AS payAmount, payAmount/amount AS payRate FROM (
            SELECT c.uname AS uname, c.rname AS rname, COUNT(*) AS payCount,SUM(c.payAmount) AS payAmount FROM (
                SELECT apply_user_name AS uname,apply.apply_real_name AS rname,SUM(apply_pay_amt) AS payAmount
                FROM case_pay_apply apply
                LEFT JOIN department dept ON apply.depart_id = dept.id
                WHERE (apply.approve_result = 62 OR apply.approve_status = 58)
                AND dept.`code` LIKE concat(#{deptCode},'%')
                <if test="timeType == 0">
                    AND YEAR(apply.approve_pay_datetime) = YEAR(NOW())
                </if>
                <if test="timeType == 1">
                    AND MONTH(apply.approve_pay_datetime) = MONTH(NOW())
                </if>
                <if test="timeType == 2">
                    AND WEEK(apply.approve_pay_datetime) = WEEK(NOW())
                </if>
                GROUP BY apply.apply_user_name,apply.apply_real_name,apply.case_id
            ) AS c
            GROUP BY c.uname,c.rname
        ) AS a
        LEFT JOIN (
            SELECT u.user_name AS uname, SUM(c.overdue_amount) AS amount, COUNT(*) AS count FROM `user` u
            LEFT JOIN case_info c ON (c.current_collector = u.id OR c.assist_collector = u.id)
            GROUP BY u.user_name
            HAVING amount IS NOT NULL
        ) AS b
        ON a.uname = b.uname
        WHERE b.amount IS NOT NULL
        <if test="rankType == 0">
            ORDER BY payAmount DESC
        </if>
        <if test="rankType == 1">
            ORDER BY payCount DESC
        </if>
        <if test="rankType == 2">
            ORDER BY payRate DESC
        </if>
        LIMIT 0, 6
    </select>


    <!--以上是新版管理员首页SQL-->
    <!-- ############################################################################################################### -->
    <!--以下是旧版管理员首页统计SQL-->


    <!--获取部门下所有用户-->
    <select id="getAllUserOnDepartment" parameterType="string" resultType="cn.fintecher.pangolin.entity.User">
        SELECT `user`.* FROM `user`
        LEFT JOIN department ON `user`.dept_id = department.id
        WHERE department.`code` LIKE concat(#{deptCode},'%')
        AND `user`.`status` = 0
    </select>

    <select id="getAllUserOnCompany" parameterType="string" resultType="cn.fintecher.pangolin.entity.User">
        SELECT `user`.* FROM `user` WHERE `user`.`company_code` = #{companyCode}
    </select>

    <!--部门下案件总金额-->
    <select id="getCaseSumAmt" parameterType="string" resultType="java.math.BigDecimal">
        SELECT SUM(case_info.overdue_amount) AS amt
        FROM case_info
        LEFT JOIN department ON case_info.depart_id = department.id
        WHERE department.`code` LIKE concat(#{deptCode},'%')
    </select>

    <!--部门下案件已还款总额-->
    <select id="getRepaySumAmt" parameterType="string" resultType="java.math.BigDecimal">
        SELECT SUM(case_pay_apply.apply_pay_amt) AS amt
        FROM case_pay_apply
        LEFT JOIN department ON case_pay_apply.depart_id = department.id
        WHERE department.`code` LIKE concat(#{deptCode},'%')
        AND (case_pay_apply.approve_result = 62 OR case_pay_apply.approve_status =58)
    </select>

    <!--部门下客户总数-->
    <select id="getCustNum" parameterType="string" resultType="integer">
        SELECT COUNT(DISTINCT(personal_id)) FROM case_info
        LEFT JOIN department ON case_info.depart_id = department.id
        WHERE department.`code` LIKE concat(#{deptCode},'%')
    </select>

    <!--部门下客户在案总数-->
    <select id="getCustNumIN" parameterType="string" resultType="integer">
        SELECT COUNT(DISTINCT(personal_id)) FROM case_info
        LEFT JOIN department ON case_info.depart_id = department.id
        WHERE department.`code` LIKE concat(#{deptCode},'%')
        AND case_info.collection_status NOT IN (24,166)
    </select>

    <!--周回款统计-->
    <select id="getWeekRepaySumAmt" parameterType="string" resultType="cn.fintecher.pangolin.report.model.WeekCountResult">
        SELECT SUM(apply_pay_amt) AS amount,WEEKDAY(approve_pay_datetime) AS dayOfWeek FROM case_pay_apply
        LEFT JOIN department
        ON case_pay_apply.depart_id = department.id
        WHERE department.`code` LIKE concat(#{deptCode},'%')
        AND (case_pay_apply.approve_result = 62 OR case_pay_apply.approve_status =58)
        AND YEARWEEK(DATE_FORMAT(approve_pay_datetime,'%Y-%m-%d'),1) = YEARWEEK(now(),1)
        GROUP BY WEEKDAY(approve_pay_datetime)
        ORDER BY dayOfWeek
    </select>

    <!--周催计数-->
    <select id="getWeekFollCount" parameterType="string" resultType="cn.fintecher.pangolin.report.model.WeekCountResult">
        SELECT COUNT(*) AS num,WEEKDAY(record.operator_time) AS dayOfWeek
        FROM case_followup_record AS record
        LEFT JOIN `user`
        ON record.operator = `user`.user_name
        LEFT JOIN department
        ON `user`.dept_id = department.id
        WHERE department.`code` LIKE concat(#{deptCode},'%')
        AND YEARWEEK(DATE_FORMAT(record.operator_time,'%Y-%m-%d'),1) = YEARWEEK(now(),1)
        GROUP BY WEEKDAY(record.operator_time)
        ORDER BY dayOfWeek
    </select>

    <!--周结案数-->
    <select id="getWeekCaseEndCount" parameterType="string" resultType="cn.fintecher.pangolin.report.model.WeekCountResult">
        SELECT SUM(m.num) AS num,m.operator_time AS dayOfWeek FROM (
            SELECT COUNT(*) AS num,WEEKDAY(operator_time) AS operator_time FROM case_info
            LEFT JOIN department
            ON case_info.depart_id = department.id
            WHERE department.`code` LIKE concat(#{deptCode},'%')
            AND case_info.collection_status = 24
            AND YEARWEEK(DATE_FORMAT(operator_time,'%Y-%m-%d'),1) = YEARWEEK(now(),1)
            GROUP BY WEEKDAY(operator_time)
          UNION ALL
            SELECT COUNT(*) AS num,WEEKDAY(operator_time) AS operator_time FROM case_info
            LEFT JOIN `user`
            ON `user`.id = case_info.assist_collector
            LEFT JOIN department
            ON `user`.dept_id = department.id
            WHERE department.`code` LIKE concat(#{deptCode},'%')
            AND case_info.collection_status = 24
            AND YEARWEEK(DATE_FORMAT(operator_time,'%Y-%m-%d'),1) = YEARWEEK(now(),1)
            GROUP BY WEEKDAY(operator_time)
        ) AS m
        GROUP BY m.operator_time
        ORDER BY dayOfWeek
    </select>

    <!--催收员排名-->
    <select id="getCupoSort" parameterType="string" resultType="cn.fintecher.pangolin.report.model.PageSortResult">
        select n.uname as uname,n.rname as name,m.amt as amount,n.pamt as payed,pamt/amt as rate from
        (
            select apply.apply_user_name as uname,apply.apply_real_name as rname,sum(apply.apply_pay_amt) as pamt from case_pay_apply as apply
            left join department
            on apply.depart_id = department.id
            where (apply.approve_status = 58 OR apply.approve_result =62)
            and department.code like concat(#{deptCode},'%')
            and year(apply.approve_pay_datetime) = year(NOW())
            and month(apply.approve_pay_datetime) = month(NOW())
            group by apply.apply_user_name,apply.apply_real_name
        ) as n
        left join
        (
            select sum(amt) as amt,coll from (
                    (
                            select sum(case_info.overdue_amount) as amt,`user`.user_name as coll from case_info
                            left join `user`
                            on `user`.id = case_info.current_collector
                            group by case_info.current_collector
                            having coll is not null
                    )
                    union all
                    (
                            select sum(case_info.overdue_amount) as amt,`user`.user_name as coll from case_info
                            left join `user`
                            on `user`.id = case_info.assist_collector
                            group by case_info.assist_collector
                            having coll is not null
                    )
            ) as c
            group by c.coll
        ) as m
        on n.uname = m.coll
        order by rate desc
        LIMIT 0,3
    </select>

    <!--客户排名-->
    <select id="getCustSort" parameterType="string" resultType="cn.fintecher.pangolin.report.model.PageSortResult">
        SELECT name,amount,payed,payed/amount as rate FROM (
        SELECT SUM(apply_pay_amt) AS payed,case_pay_apply.personal_name AS name,case_pay_apply.personal_id AS pid FROM case_pay_apply
        LEFT JOIN department
        ON case_pay_apply.depart_id = department.id
        WHERE (case_pay_apply.approve_status = 58 OR case_pay_apply.approve_result =62)
        AND department.`code` LIKE concat(#{deptCode},'%')
        AND DATE_FORMAT(approve_pay_datetime, '%Y%m') = DATE_FORMAT(curdate(),'%Y%m')
        GROUP BY case_pay_apply.personal_id,case_pay_apply.personal_name
        ) AS m
        LEFT JOIN (
        SELECT SUM(overdue_amount) AS amount,personal_id AS pid FROM case_info
        GROUP BY personal_id
        ) AS n
        ON m.pid = n.pid
        ORDER BY rate DESC
        LIMIT 0,3
    </select>
</mapper>